inoremap jj <ESC>
cnoremap jj <c-c>
vnoremap v  <ESC>
nnoremap <leader><space> :nohlsearch<CR>
nnoremap <C-o> :NERDTreeToggle<CR>

" Commenting blocks of code.
autocmd FileType c,cpp,java,scala,javascript let b:comment_leader = '// '
autocmd FileType sh,ruby,python   let b:comment_leader = '# '
autocmd FileType conf,fstab       let b:comment_leader = '# '
autocmd FileType tex              let b:comment_leader = '% '
autocmd FileType mail             let b:comment_leader = '> '
autocmd FileType vim              let b:comment_leader = '" '
noremap <silent> ,ic :<C-B>silent <C-E>s/^/<C-R>=escape(b:comment_leader,'\/')<CR>/<CR>:nohlsearch<CR>
noremap <silent> ,rc :<C-B>silent <C-E>s/^\V<C-R>=escape(b:comment_leader,'\/')<CR>//e<CR>:nohlsearch<CR>

" LSP Remapping
nnoremap <F5> :call LanguageClient_contextMenu()<CR>
nnoremap <silent> K :call LanguageClient#textDocument_hover()<CR>
nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>
nnoremap <silent> gi :call LanguageClient#textDocument_implementation()<CR>
nnoremap <silent> gs :call LanguageClient#textDocument_documentSymbol()<CR>
nnoremap <silent> gr :call LanguageClient#textDocument_references()<CR>
nnoremap <silent> <leader>ps :call LanguageClient#workspace_symbol()<CR>
nnoremap <silent> <F2> :call LanguageClient#textDocument_rename()<CR>

" Deoplete Remapping
inoremap <silent> <expr><CR>
    \ pumvisible() ?
    \ deoplete#close_popup() : "\<CR>"

" Find Todos and display in an fzf list
command! -bang -nargs=* Todos
    \ call fzf#vim#ag('TODO:|BUG:|FIXME:', {'window': 'bo 10new'}, <bang>0)
" vim: set ft=vim:
